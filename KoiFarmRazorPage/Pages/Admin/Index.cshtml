@page
@model KoiFarmRazorPage.Pages.Admin.IndexModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="admin-container">
    <div class="sidebar">
        <h3>Management</h3>
        <ul>
            <li><a href="#" onclick="showContent('user')" id="user-tab">Manage User</a></li>
            <li><a href="#" onclick="showContent('booking')" id="booking-tab">Manage Booking</a></li>
            <li><a href="#" onclick="showContent('transaction')" id="transaction-tab">Manage Transaction</a></li>
            <li><a href="#" onclick="showContent('revenue')" id="revenue-tab">Manage Revenue</a></li>
        </ul>
    </div>

    <div class="content">
        <div id="user-content" class="tab-content">
            <h2>User Management</h2>
            <p>
                <a asp-page="CreateUser">Create New</a>
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].Password)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].Phone)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].Role)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].CreateAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].UpdateAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User[0].IsDeleted)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.User)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Password)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Phone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Role)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreateAt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UpdateAt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsDeleted)
                            </td>
                            <td>
                                <a asp-page="./EditUser" asp-route-id="@item.UserId">Edit</a> |
                                <a asp-page="./DetailsUser" asp-route-id="@item.UserId">Details</a> |
                                <a asp-page="./DeleteUser" asp-route-id="@item.UserId">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Danh sách Booking trong hệ thống -->
        <div id="booking-content" class="tab-content" style="display: none;">
            <h2>Booking Management</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            KoiFish Names
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].ProductId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].TotalPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].CreateAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].UpdateAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].IsDeleted)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Order[0].User.Name)
                        </th>
                        <th>
                            Action
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Order)
                    {
                        <tr>
                            <td>
                                @string.Join(", ", item.KoiFishList.Select(kf => kf.Name))
                            </td>
                            <td>
                                @string.Join(", ", item.ProductList.Select(pd => pd.Name))
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreateAt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UpdateAt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsDeleted)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.User.Name)
                            </td>
                            <td>
                                <a asp-page="./OrderManagement/Details" asp-route-id="@item.OrderId">Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Danh sách Transaction trong hệ thống -->
        <div id="transaction-content" class="tab-content" style="display: none;">
            <h2>Transaction Management</h2>
            <p>Here is the list of transactions.</p>
            <!-- Add table or list to show transaction data -->
            <ul>
                <li>Transaction 1</li>
                <li>Transaction 2</li>
                <li>Transaction 3</li>
            </ul>
        </div>

        <!-- Chart Revenue trong hệ thống -->
        <div id="revenue-content" class="tab-content" style="display: none;">
            <h2>Revenue Management</h2>
            <div class="container">
                <!-- Section 1: Overview Cards -->
                <div class="row text-center mb-4">
                    <div class="col-md-4">
                        <div class="card bg-primary text-white">
                            <div class="card-body">
                                <h5 class="card-title">Doanh thu hôm nay</h5>
                                <p class="card-text display-6">@string.Format("{0:N0}", Model.TodayRevenue) VNĐ</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-success text-white">
                            <div class="card-body">
                                <h5 class="card-title">Doanh thu tháng này</h5>
                                <p class="card-text display-6">@string.Format("{0:N0}", Model.MonthRevenue) VNĐ</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-info text-white">
                            <div class="card-body">
                                <h5 class="card-title">Doanh thu năm nay</h5>
                                <p class="card-text display-6">@string.Format("{0:N0}", Model.YearRevenue) VNĐ</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Section 2: Revenue Charts -->
                <div class="row">
                    <!-- Daily Revenue Chart -->
                    <div class="col-md-4">
                        <h5>Doanh thu theo ngày</h5>
                        <canvas id="dailyRevenueChart"></canvas>
                    </div>

                    <!-- Monthly Revenue Chart -->
                    <div class="col-md-4">
                        <h5>Doanh thu theo tháng</h5>
                        <canvas id="monthlyRevenueChart"></canvas>
                    </div>

                    <!-- Yearly Revenue Chart -->
                    <div class="col-md-4">
                        <h5>Doanh thu theo năm</h5>
                        <canvas id="yearlyRevenueChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Styles for layout and appearance */
    .admin-container {
        display: flex;
    }

    .sidebar {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 250px;
        background-color: #343a40;
        color: #fff;
        padding: 20px;
        border-right: 1px solid #444;
    }

        .sidebar h3 {
            margin-top: 0;
            font-size: 1.2em;
            border-bottom: 1px solid #555;
            padding-bottom: 10px;
        }

        .sidebar ul {
            list-style-type: none;
            padding: 0;
        }

            .sidebar ul li {
                margin: 15px 0;
            }

                .sidebar ul li a {
                    text-decoration: none;
                    color: #adb5bd;
                    font-size: 1.1em;
                    transition: color 0.3s;
                }

                    .sidebar ul li a:hover {
                        color: #fff;
                    }

    .content {
        margin-left: 100px;
        margin-right: -100px;
        padding: 20px;
        flex: 1;
        background-color: #f8f9fa;
        min-height: 100vh;
    }

    .tab-content {
        display: none;
    }

        .tab-content.active {
            display: block;
        }
</style>

<script>
    function showContent(tab) {
        // Hide all tab content
        var contents = document.querySelectorAll('.tab-content');
        contents.forEach(function(content) {
            content.style.display = 'none';
        });

        // Remove 'active' class from all sidebar links
        var tabs = document.querySelectorAll('.sidebar ul li a');
        tabs.forEach(function(tab) {
            tab.classList.remove('active');
        });

        // Show selected tab content
        document.getElementById(tab + '-content').style.display = 'block';

        // Set active class for clicked tab
        document.getElementById(tab + '-tab').classList.add('active');
    }

    // Set default active tab on page load
    window.onload = function() {
        showContent('user');
    };
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Sample data, replace with actual data from server
    const dailyData = @Html.Raw(Json.Serialize(Model.DailyRevenueData));
    const monthlyData = @Html.Raw(Json.Serialize(Model.MonthlyRevenueData));
    const yearlyData = @Html.Raw(Json.Serialize(Model.YearlyRevenueData));

    // Daily Revenue Chart
    new Chart(document.getElementById('dailyRevenueChart'), {
        type: 'line',
        data: {
            labels: dailyData.labels,
            datasets: [{
                label: 'Doanh thu theo ngày',
                data: dailyData.values,
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        }
    });

    // Monthly Revenue Chart
    new Chart(document.getElementById('monthlyRevenueChart'), {
        type: 'bar',
        data: {
            labels: monthlyData.labels,
            datasets: [{
                label: 'Doanh thu theo tháng',
                data: monthlyData.values,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        }
    });

    // Yearly Revenue Chart
    new Chart(document.getElementById('yearlyRevenueChart'), {
        type: 'line',
        data: {
            labels: yearlyData.labels,
            datasets: [{
                label: 'Doanh thu theo năm',
                data: yearlyData.values,
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        }
    });
</script>